version: '2.4'

services:
  django:
    build:
      args:
        IMAGE_TAG: ${IMAGE_TAG:-master}
    depends_on:
      # - elasticsearch
      - postgres
      - redis
    env_file: .env
    environment:
      DOTENV: ${DOTENV:-develop}
      FLOWER_PORT: 5555
      PGHOST: postgres
      PGUSER: postgres
    image: interaction/project_template:${IMAGE_TAG:-master}-devcontainer
    ports:
      - 5555
      - 8000
    volumes:
      # Bind mount the project directory with `cached` consistency for performance.
      - .:/opt/project_template:cached
      # Bind the Docker socket, so we can manage the whole stack (e.g. view logs, exec
      # into or restart redis, etc.)
      - /var/run/docker.sock:/var/run/docker.sock
      # Persist vscode extensions to avoid reinstalling them on rebuild.
      - vscode-extensions:/root/.vscode-server/extensions
      - vscode-insiders-extensions:/root/.vscode-server-insiders/extensions

  # elasticsearch:
  #   environment:
  #     discovery.type: single-node
  #     ES_JAVA_OPTS: ${ES_JAVA_OPTS:--Xms256m -Xmx256m}
  #   image: interaction/elasticsearch-icu:7-alpine
  #   ports:
  #     - 9200
  #   volumes:
  #     - elasticsearch-data:/usr/share/elasticsearch/data

  postgres:
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata  # Store data in subdirectory of volume mount point, per PostgreSQL recommendations
      POSTGRES_HOST_AUTH_METHOD: trust
    image: postgres:12.2-alpine
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    command: --maxmemory 256mb --maxmemory-policy volatile-lru
    image: redis:6-alpine
    volumes:
      - redis-data:/data

volumes:
  # Visual Studio Code extensions.
  vscode-extensions:
  vscode-insiders-extensions:
  # No anonymous volumes.
  elasticsearch-data:
  postgres-data:
  redis-data:
